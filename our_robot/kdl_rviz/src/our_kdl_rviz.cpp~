#include <moveit/move_group_interface/move_group.h>
#include <moveit/planning_scene_interface/planning_scene_interface.h>

#include <moveit_msgs/DisplayRobotState.h>
#include <moveit_msgs/DisplayTrajectory.h>

#include <moveit_msgs/AttachedCollisionObject.h>
#include <moveit_msgs/CollisionObject.h>

int main(int argc, char **argv)
{
  ros::init(argc, argv, "our_kdl_rviz");
  ros::NodeHandle node_handle;  
  ros::AsyncSpinner spinner(1);
  spinner.start();


  /* 等rviz起来，如果没在一个lanuch中，可以省去这个*/
  sleep(20.0);

  moveit::planning_interface::MoveGroup group("joint_group");

  // 创建一个publisher在rviz中显示规划.
  ros::Publisher display_publisher = node_handle.advertise<moveit_msgs::DisplayTrajectory>("/move_group/display_planned_path", 1, true);
  moveit_msgs::DisplayTrajectory display_trajectory;

  // Getting Basic Information
  // ^^^^^^^^^^^^^^^^^^^^^^^^^
  ROS_INFO("Reference frame: %s", group.getPlanningFrame().c_str());//打印坐标系

  ROS_INFO("Reference frame: %s", group.getEndEffectorLink().c_str());//打印末端链节
/*
//设置一个末端执行器的位置（这种方式就是表示末端位置？）
  geometry_msgs::Pose target_pose1;
  target_pose1.orientation.w = 1.0;
  target_pose1.position.x = 0.28;
  target_pose1.position.y = -0.7;
  target_pose1.position.z = 1.0;
  group.setPoseTarget(target_pose1);


//规划路径并在rviz中显示
  moveit::planning_interface::MoveGroup::Plan my_plan;
  bool success = group.plan(my_plan);//自动显示

  ROS_INFO("Visualizing plan 1 (pose goal) %s",success?"":"FAILED");    
  
  sleep(5.0);

//手动再显示一次
  if (1)
  {
    ROS_INFO("Visualizing plan 1 (again)");    
    display_trajectory.trajectory_start = my_plan.start_state_;
    display_trajectory.trajectory.push_back(my_plan.trajectory_);
    display_publisher.publish(display_trajectory);

    sleep(5.0);
  }*/


  std::vector<double> group_variable_values;
  group.getCurrentState()->copyJointGroupPositions(group.getCurrentState()->getRobotModel()->getJointModelGroup(group.getName()), group_variable_values);
   moveit::planning_interface::MoveGroup::Plan my_plan;
  // Now, let's modify one of the joints, plan to the new joint
  // space goal and visualize the plan.
  group_variable_values[0] = -1.0;
group_variable_values[1] = -1.0;
 
  group.setJointValueTarget(group_variable_values);
  bool success = group.plan(my_plan);

  ROS_INFO("Visualizing plan 2 (joint space goal) %s",success?"":"FAILED");
  /* Sleep to give Rviz time to visualize the plan. */
  sleep(5.0);  
  ros::shutdown();  
  return 0;
}
